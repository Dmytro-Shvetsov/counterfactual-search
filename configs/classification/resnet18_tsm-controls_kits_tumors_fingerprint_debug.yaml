task_name: classification

seed: 777
sample_interval: 30

n_epochs: 1000
epoch_steps: 50

logging_dir: ./training_logs/classification/tumors-kits-tsm-sametranspose
experiment_name: kits-tsm_effv2s_aug_tm-area-split
checkpoint_freq: 10

# dataset:
#   kind: merged
#   batch_size: 256
#   img_size: [256, 256] # hxw
#   use_sampler: True
#   reset_sampler: True
#   num_workers: 28
#   imagenet_norm: False # mean=[0.5], std=[0.5]
#   root_dir: null
#   augs: [hflip, vflip, shift_scale_rotate] # only resize and norm

#   datasets:
#     - kind: totalsegmentor
#       root_dir: ./data/totalsegmentor-v1-controls
#       labels_dir: nnUNet_predictions
      
#       scan_params:
#         slicing_direction: axial
#         classes: ['empty', 'kidney']
#         sampling_class: ['kidney']
#         filter_class_slices: ['kidney']
#         filter_class_slices_thresh: 32

#         synth_params:
#           p: 0.65
#           size: 20
#           sigma: 0.4
#           mask_thresh: 0.25

#         norm_scheme: &norm
#           kind: minmax

#         # norm_scheme: &norm
#         #   kind: ct
#         #   rescale: True
#         #   fingerprint_path: data/tsm-v1-controls_kits23_dataset_fingerprint.json

#     - kind: kits
#       root_dir: data/kits23
#       split_dir: splits/skf_tumor_area_split0

#       # LABEL_AGGREGATION_ORDER = (1, 3, 2)
#       # this means that we first place the kidney, then the cyst and finally the
#       # tumor. The order matters! If parts of a later label (example tumor) overlap
#       # with a prior label (kidney or cyst) the prior label is overwritten
#       # KITS_LABEL_NAMES = {
#       #     1: "kidney",
#       #     2: "tumor",
#       #     3: "cyst"
#       # }
#       scan_params:
#         # load_masks: True
#         norm_scheme: *norm
#         slicing_direction: axial
#         classes: ['empty', 'kidney', 'tumor', 'cyst']
        
#         sampling_class: ['tumor']
#         classify_labels: ['tumor']
#         classify_labels_thresh: 32

#         # fetch only kidney slices in loaders that have masks with at least `filter_class_slices_thresh` non zero pixels
#         filter_class_slices: ['kidney']
#         filter_class_slices_thresh: 100

dataset:
  kind: totalsegmentor
  root_dir: ./data/totalsegmentor # 1804 * 64 slices in totalsegmentor dataset
  batch_size: 128
  img_size: [256, 256] # hxw
  use_sampler: False
  reset_sampler: False
  num_workers: 28
  imagenet_norm: False # mean=[0.5], std=[0.5]
  augs: [hflip, vflip, shift_scale_rotate] # only resize and norm

  # limit_scans: 2

  scan_params:
    min_max_normalization: True
    slicing_direction: axial
    classes: ['empty', 'kidney']
    sampling_class: ['kidney']
    filter_class_slices: ['kidney']
    filter_class_slices_thresh: 32
    # norm_scheme: &norm
      # kind: minmax
    norm_scheme: &norm
      kind: ct
      rescale: True
      fingerprint_path: data/totalsegmentor/dataset_fingerprint.json
    synth_params:
      p: 0.65
      size: 20
      sigma: 0.4
      mask_thresh: 0.25

model:
  kind: efficientnet_v2_s
  n_classes: 1
  pretrained: True
  # restore_ckpt: training_logs/classification/resnet18-October-21-2023_02+35PM-af13228-tsm_synth_r18_kdn-only/checkpoints/checkpoint_50.pth
  in_channels: 1

  loss: bce

  # optimizer's parameters
  lr: 0.001
  b1: 0.9
  b2: 0.999
  weight_decay: 0.0001
